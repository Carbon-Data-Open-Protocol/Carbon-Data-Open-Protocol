{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://github.com/Carbon-Data-Open-Protocol/Carbon-Data-Open-Protocol/project_approach_and_details.json",
  "$defs": {
    "projectIdType": {
      "type": "string",
      "enum": [
        "internal_project_id",
        "current_registry_project_id",
        "origin_registry_project_id",
        "compliance_market_project_id",
        "global_unique_project_id"
      ]
    },
    "projectDocType": {
      "type": "string",
      "enum": [
        "project_monitoring_plan",
        "project_monitoring_report",
        "non_permanence_risk_assessment",
        "voluntary_cancellation_certification",
        "loss_event_report",
        "to_be_expanded_upon"
      ]
    },
    "projectStatus": {
      "type": "string",
      "enum": [
        "listed",
        "validated",
        "registered",
        "approved",
        "authorized",
        "completed",
        "withdrawn",
        "de_registered",
        "inactive",
        "rejected"
      ]
    },
    "registryName": {
      "oneOf": [
        {
          "type": "string",
          "enum": [
            "verra",
            "gold_standard",
            "plan_vivo",
            "cdm",
            "woodland_carbon_code",
            "peatland_carbon_code",
            "isometric",
            "puro_earth",
            "climate_action_reserve",
            "american_carbon_registry",
            "biocarbon_registry",
            "social_carbon"
          ]
        },
        {
          "type": "string",
          "pattern": "^x_[A-Za-z0-9_]+$"
        }
      ]
    },
    "stakeholderType": {
      "oneOf": [
        {
          "type": "string",
          "enum": [
            "project_developer",
            "registry_accounting_and_tracking",
            "registry_with_transaction_functionality",
            "infrastructure_provider_operator",
            "multilateral_organization",
            "carbon_crediting_program",
            "verification_accreditation_agency",
            "project_owner",
            "project_implementer",
            "technical_consultant",
            "gis_advisory",
            "feasibility_study_service",
            "technical_document_service",
            "administrative_service",
            "biodiversity_advisory",
            "political_advocacy",
            "mrv_data_provider",
            "other"
          ]
        },
        {
          "type": "string",
          "pattern": "^x_[A-Za-z0-9_]+$"
        }
      ]
    },
    "registryListing": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "name": {
          "$ref": "#/$defs/registryName"
        },
        "listing_start_date": {
          "type": "string",
          "format": "date",
          "description": "Date the project began being listed on this registry."
        },
        "listing_end_date": {
          "type": "string",
          "format": "date",
          "description": "Date the project stopped being listed on this registry (omit if still active)."
        }
      },
      "required": [
        "name"
      ]
    },
    "contactInfo": {
      "type": "object",
      "additionalProperties": false,
      "minProperties": 1,
      "properties": {
        "website": {
          "type": "string",
          "format": "uri"
        },
        "email": {
          "type": "string",
          "format": "email"
        },
        "phone": {
          "type": "string",
          "pattern": "^\\+?[0-9 .()-]{7,}$"
        }
      }
    },
    "stakeholder": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "name": {
          "type": "string"
        },
        "stakeholder_type": {
          "$ref": "#/$defs/stakeholderType"
        },
        "contact": {
          "$ref": "#/$defs/contactInfo"
        }
      },
      "required": [
        "name",
        "stakeholder_type"
      ]
    }
  },
  "title": "Project Approach and Details",
  "type": "object",
  "additionalProperties": false,
  "patternProperties": {
    "^x_[A-Za-z0-9_]+$": {
      "description": "Custom top-level extension property. Must start with x_.",
      "type": [
        "string",
        "number",
        "boolean",
        "object",
        "array",
        "null"
      ]
    }
  },
  "properties": {
    "crediting_program": {
      "type": "array",
      "description": "List of carbon crediting programs issuing the project's credits, including associated standards and versions.",
      "items": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "program_name": {
            "type": "string",
            "description": "The name of the carbon crediting program issuing the project's credits."
          },
          "standard_name": {
            "type": "string",
            "description": "The name of the standard associated with the project's credits."
          },
          "initial_standard_version": {
            "type": "string",
            "description": "The version of the standard under which the project was initially registered."
          },
          "current_standard_version": {
            "type": "string",
            "description": "The version of the standard under which the project is currently registered."
          }
        },
        "required": [
          "program_name"
        ]
      }
    },
    "methodology": {
      "type": "array",
      "description": "List of methodologies applied to the project, including all versions and documentation.",
      "items": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1
          },
          "versions": {
            "type": "array",
            "description": "All methodology versions applied to the project (current and historical).",
            "items": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "version": {
                  "type": "string",
                  "description": "Version identifier (e.g. v1.0, v2.2)."
                },
                "document": {
                  "type": "string",
                  "format": "uri",
                  "description": "Link to documentation for this version."
                },
                "is_current": {
                  "type": "boolean",
                  "description": "True if this is the version currently in use."
                }
              },
              "required": [
                "version"
              ]
            },
            "minItems": 1,
            "contains": {
              "type": "object",
              "properties": {
                "is_current": {
                  "const": true
                }
              },
              "required": [
                "is_current"
              ]
            },
            "minContains": 1,
            "maxContains": 1
          }
        },
        "required": [
          "name",
          "versions"
        ]
      }
    },
    "project": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the project.",
          "minLength": 1
        },
        "identifiers": {
          "type": "array",
          "minItems": 1,
          "items": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "identifier_type": {
                "oneOf": [
                  {
                    "$ref": "#/$defs/projectIdType"
                  },
                  {
                    "type": "string",
                    "pattern": "^x_[A-Za-z0-9_]+$",
                    "description": "Custom identifier type; must start with 'x_'."
                  }
                ]
              },
              "value": {
                "type": "string",
                "minLength": 1
              }
            },
            "required": [
              "identifier_type",
              "value"
            ]
          }
        },
        "project_description": {
          "type": "string",
          "description": "Description of the mitigation activities undertaken by the project, preferably the registryâ€™s public description.",
          "minLength": 1
        },
        "design_document_link": {
          "type": "string",
          "format": "uri",
          "description": "The link to the project's design documentation (PDD).",
          "minLength": 1
        },
        "exemptions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "If relevant, any approved deviations from methodology requirements granted by the registry."
        },
        "program_type": {
          "type": "string",
          "description": "If referring to a program of activities, specify the type of program.",
          "minLength": 1
        },
        "activity_type": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "If the project (activity) is part of a broader program of activities, specify which type of project the activity is."
        },
        "mitigation_type": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The type of offset the project is expected to generate."
        },
        "sector": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The sector in which the project is developed and the mitigation activities conducted."
        },
        "project_type": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The emission reduction or sequestration pathway of project."
        },
        "registry_link": {
          "type": "string",
          "format": "uri",
          "description": "The link to the project on its current registry.",
          "minLength": 1
        },
        "status": {
          "$ref": "#/$defs/projectStatus",
          "description": "The current status of the project."
        },
        "status_updated_at": {
          "type": "string",
          "format": "date",
          "description": "The date of the current status of the project."
        },
        "crediting_periods": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "length_years": {
                "type": "integer",
                "minimum": 1,
                "description": "The duration (in years) of each crediting period granted to the project under the applicable methodology or registry."
              },
              "start_date": {
                "type": "string",
                "format": "date"
              },
              "end_date": {
                "type": "string",
                "format": "date"
              }
            },
            "required": [
              "length_years"
            ]
          }
        },
        "registration_date": {
          "type": "string",
          "format": "date",
          "description": "The date the project was registered on the registry."
        },
        "list_date": {
          "type": "string",
          "format": "date",
          "description": "The date the project was first listed on a registry."
        },
        "documents": {
          "type": "array",
          "description": "Additional project documentation entries.",
          "items": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "document_type": {
                "$ref": "#/$defs/projectDocType"
              },
              "link": {
                "type": "string",
                "format": "uri"
              }
            },
            "required": [
              "document_type",
              "link"
            ]
          }
        }
      },
      "required": [
        "identifiers",
        "name",
        "project_description"
      ]
    },
    "project_stakeholder": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "primary_developer": {
          "type": "object",
          "description": "The primary project developer.",
          "additionalProperties": false,
          "properties": {
            "name": {
              "type": "string"
            },
            "contact": {
              "$ref": "#/$defs/contactInfo"
            }
          },
          "required": [
            "name"
          ]
        },
        "stakeholders": {
          "type": "array",
          "description": "Other stakeholders involved with the project.",
          "items": {
            "$ref": "#/$defs/stakeholder"
          }
        }
      },
      "required": [
        "primary_developer"
      ]
    },
    "registry": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "current_registry": {
          "description": "The project's current registry and (optionally) the listing start/end dates.",
          "allOf": [
            {
              "$ref": "#/$defs/registryListing"
            },
            {
              "not": {
                "required": [
                  "listing_end_date"
                ]
              }
            }
          ]
        },
        "previous_registries": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/registryListing"
          },
          "description": "Any previous registries where the project was listed, with optional listing dates."
        }
      },
      "required": [
        "current_registry"
      ]
    },
    "validation": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "validation_body_name": {
          "type": "string",
          "description": "The name of the validation body that validated the project (if applicable)."
        },
        "validation_date": {
          "type": "string",
          "format": "date",
          "description": "The date on which the project was validated (if applicable)."
        },
        "validation_report": {
          "type": "string",
          "format": "uri",
          "description": "The link to the project's validation report (if applicable)."
        }
      }
    }
  }
}